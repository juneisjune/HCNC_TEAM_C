<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hcnc.cteam.post.PostMapper">
    <!-- 게시글 목록 조회 -->
    <select id="selectPost" parameterType="map" resultType="map">
	    SELECT '0' AS checked,  -- checked 컬럼 추가 (기본값은 '0')
	           a.post_code,
	           a.title,
	           a.content,
	           a.reg_date,
	           b.name AS emp_name,
	           a.view_count
	    FROM post a
	    INNER JOIN employee b 
	      ON a.emp_code = b.emp_code
	    ORDER BY a.post_code DESC
	</select>

	<!-- 게시글 상세 조회 관련 쿼리 -->	
	<select id="selectPostDetail" parameterType="int" resultType="map">
	    SELECT a.post_code, a.title, a.content, a.reg_date, name, a.view_count
	    	FROM post a
	    INNER JOIN employee b 
	      ON a.emp_code = b.emp_code
	    WHERE post_code = #{postCode}
	</select>	
	<!-- 조회수 1 증가 관련 -->
	<update id ="increaseViewCount" parameterType="int">
		UPDATE post
			SET view_count =view_count +1
		WHERE post_code =#{post_code}
	</update>
	<!-- 글 등록 관련 -->
	<insert id="insertPost" parameterType="map" keyProperty="post_code">
	    INSERT INTO post (
	        emp_code, title, content, view_count,
	        reg_date, reg_name, upd_date, upd_name
	    ) VALUES (
	        #{emp_code}, #{title}, #{content}, 0,
	        NOW(), #{reg_name}, NOW(), #{upd_name}
	    );
	    <selectKey resultType="int" keyProperty="post_code" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<!-- 첨부파일 등록 -->
	<insert id="insertAttachment" parameterType="map">
	    INSERT INTO attachment (
	        post_code, emp_code, attach_name, attach_url,
	        reg_date, reg_name, upd_date, upd_name
	    ) VALUES (
	        #{post_code}, #{emp_code}, #{attach_name}, #{attach_url},
	        NOW(), #{reg_name}, NOW(), #{upd_name}
	    );
	</insert>
	<!-- 다움 관련 -->
	<select id="selectAttachments" parameterType="int" resultType="map">
	    SELECT
	        attach_code,
	        post_code,
	        emp_code,
	        attach_name,
	        attach_url,
	        reg_date,
	        reg_name,
	        upd_date,
	        upd_name
	    FROM
	        attachment
	    WHERE
	        post_code = #{postCode}
	</select>
	<select id="selectAttachment" parameterType="int" resultType="map">
	    SELECT
	        attach_code,
	        post_code,
	        emp_code,
	        attach_name,
	        attach_url,
	        reg_date,
	        reg_name,
	        upd_date,
	        upd_name
	    FROM
	        attachment
	    WHERE
	        attach_code = #{attachCode}
	</select>
	
	<!-- 게시글 삭제 쿼리 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM post WHERE post_code = #{postCode}
    </delete>
    <!-- 게시글에 관련된 첨부파일 삭제 -->
	<delete id="deleteAttachment" parameterType="int">
	    DELETE FROM attachment WHERE post_code = #{post_code}
	</delete>
	<!-- 게시글 제목 및 내용 수정 -->
	<update id="updatePost" parameterType="map">
	    UPDATE post
	    SET title = #{title},
	        content = #{content},
	        upd_date = NOW(),
	        upd_name = #{upd_name}
	    WHERE post_code = #{post_code}
	</update>
	<!-- 여기까지 이상무 -->
	<!-- 게시글 목록 페이징 처리 조회 -->
	<select id="selectPostWithPaging" resultType="map">
	    SELECT a.post_code, a.title, a.content, a.reg_date, b.name AS emp_name, a.view_count
	    	FROM post a
	    INNER JOIN employee b ON a.emp_code = b.emp_code
	    ORDER BY a.post_code DESC
	    LIMIT #{offset}, #{pageSize}
	</select>
	
	<!-- 전체 게시글 수 조회 -->
	<select id="getTotalPostCount" resultType="int">
	    SELECT COUNT(*) FROM post
	</select>
	<!-- 다중 게시글 삭제 -->
	<delete id="deletePosts" parameterType="list">
	    DELETE FROM post WHERE post_code IN
	    <foreach item="post_code" collection="list" open="(" separator="," close=")">
	        #{post_code}
	    </foreach>
	</delete>
	<!-- 다중 게시글에 해당하는 첨부파일 삭제 쿼리 추가 -->
	<delete id="deleteAttachments" parameterType="list">
	    DELETE FROM attachment WHERE post_code IN
	    <foreach item="post_code" collection="list" open="(" separator="," close=")">
	        #{post_code}
	    </foreach>
	</delete>

	
	


	

</mapper>

