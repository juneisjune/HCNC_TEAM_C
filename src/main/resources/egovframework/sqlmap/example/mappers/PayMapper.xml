<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hcnc.cteam.pay.PayMapper">

	<!-- 해당 월 급여 조회 -->
	<select id="selectMyPay" resultType="payDTO" parameterType="paySearchDTO">
		SELECT emp_code, pay_year, pay_month, give_date, month, pay_over, pay_meal, absence, pay_amount,
		income_tax, resident_tax, national_tax, emp_insurance, health_insurance, longcare_insurance, actual_pay, etc
		FROM pay 
		WHERE emp_code = #{empCode}
		AND pay_month = #{payMonth}
		AND pay_year = #{payYear};
	</select>
	
	<!-- 직원 정보 조회 -->
	<select id="selectEmp" resultType="payEmpDTO" parameterType="Integer">
		SELECT emp_code, e.assign_code, assign_name, e.dep_code, dep_name, id, name, join_date
		FROM employee e JOIN `assignment` a 
		ON e.assign_code = a.assign_code 
		JOIN department d 
		ON d.dep_code = e.dep_code 
		WHERE emp_code =  #{empCode};
	</select>	
	
	<!-- 공제총액 조회 -->
	<select id="selectMinus"  resultType="int" parameterType="paySearchDTO">
		SELECT income_tax + resident_tax + national_tax + emp_insurance + health_insurance + longcare_insurance 
		FROM pay 
		WHERE emp_code =  #{empCode}
		AND pay_month = #{payMonth}
		AND pay_year = #{payYear}
	</select>
	
	<!-- 총 근무일수 조회 -->
	<select id="selectTotalDay" resultType="int" parameterType="paySearchDTO">
		SELECT 
		(SELECT COUNT(*)
		FROM attendance a JOIN att_code ac 
		ON a.atten_code = ac.atten_code 
		JOIN employee e 
		ON a.emp_code = e.emp_code 
		WHERE a.emp_code =  #{empCode}
		AND a.atten_code = 1
		AND MONTH(work_date) = #{payMonth}
		AND YEAR(work_date) = #{payYear}  ) 
		+ 
		(SELECT COUNT(*)
		FROM attendance a JOIN att_code ac 
		ON a.atten_code = ac.atten_code 
		JOIN employee e 
		ON a.emp_code = e.emp_code 
		WHERE a.emp_code =  #{empCode}
		AND a.atten_code = 3
		AND MONTH(work_date) = #{payMonth}
		AND YEAR(work_date) = #{payYear} );
	</select>
	
	<!-- 총 근무시간 조회 -->
	<select id="selectTotalTime" resultType="int" parameterType="paySearchDTO">
		SELECT (SELECT COUNT(*) * 8
		FROM attendance a JOIN att_code ac 
		ON a.atten_code = ac.atten_code 
		JOIN employee e 
		ON a.emp_code = e.emp_code 
		WHERE a.emp_code =  #{empCode}
		AND a.atten_code = 1
		AND MONTH(work_date) = #{payMonth}
		AND YEAR(work_date) =  #{payYear} ) 
		+ 
		(SELECT COUNT(*) * 8 
		FROM attendance a JOIN att_code ac 
		ON a.atten_code = ac.atten_code 
		JOIN employee e 
		ON a.emp_code = e.emp_code 
		WHERE a.emp_code =  #{empCode}
		AND a.atten_code = 3
		AND MONTH(work_date) = #{payMonth}
		AND YEAR(work_date) =  #{payYear} );
	</select>
	
	<!-- pay_over 조회 -->
	<select id="selectWorkOver" resultType="Double" parameterType="paySearchDTO">
		SELECT SUM(work_over)
		FROM attendance a JOIN att_code ac 
		ON a.atten_code = ac.atten_code 
		JOIN employee e 
		ON a.emp_code = e.emp_code 
		WHERE a.emp_code =  #{empCode}
		AND a.atten_code = 1
		AND MONTH(work_date) = #{payMonth}
		AND YEAR(work_date) = #{payYear} ;
	</select>	
	
	<!-- 급여 목록 조회 -->
	<select id="selectPayList" resultType="payDTO" parameterType="int">
		SELECT emp_code, pay_year, pay_month, give_date, month, pay_over, pay_meal, absence, pay_amount,
		income_tax, resident_tax, national_tax, emp_insurance, health_insurance, longcare_insurance, actual_pay, etc
		FROM pay 
		WHERE emp_code =  #{empCode}
		ORDER BY pay_year DESC,
		pay_month DESC;
	</select>
	
	<!-- 기간별 급여 조회 -->
	<select id="selectPeriod" resultType="payDTO" parameterType="paySearchDTO">
		SELECT emp_code, pay_year, pay_month, give_date, month, pay_over, pay_meal, absence, pay_amount,
		income_tax, resident_tax, national_tax, emp_insurance, health_insurance, longcare_insurance, actual_pay, etc
		FROM pay 
		WHERE emp_code =  #{empCode}
		AND pay_year BETWEEN #{startYear} AND #{endYear}
		AND pay_month BETWEEN #{startMonth} AND #{endMonth}
		ORDER BY pay_year DESC,
		pay_month DESC;
	</select>
	
	<select id="nexaGetPayListByCondition" resultType="payDTO">
 SELECT a.emp_code as empCode,       
           a.name as name,              
           d.assign_name as assignName, 
           e.dep_name as depName,       
           b.pay_year as payYear,       
           b.pay_month as payMonth,     
           b.actual_pay as actualPay,
           b.etc as etc,
           b.upd_name as updName  <!-- 수정한 사용자 이름 추가 -->
    FROM employee a
    JOIN pay b ON a.emp_code = b.emp_code
    JOIN assignment d ON a.assign_code = d.assign_code
    JOIN department e ON a.dep_code = e.dep_code

	        
	    <!-- 검색 조건 -->
	    <if test="SEARCH_WORD != null and SEARCH_WORD != '' and SEARCH_TYPE != null">
	        <if test="SEARCH_TYPE == 'ALL'">
	            AND (a.emp_code LIKE CONCAT('%', #{SEARCH_WORD}, '%')
	            OR a.name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
	            OR d.assign_name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
	            OR e.dep_name LIKE CONCAT('%', #{SEARCH_WORD}, '%'))
	        </if>
	        <if test="SEARCH_TYPE == 'NAME'">
	            AND a.name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
	        </if>
	        <if test="SEARCH_TYPE == 'ASSIGNMENT'">
	            AND d.assign_name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
	        </if>
	        <if test="SEARCH_TYPE == 'DEPARTMENT'">
	            AND e.dep_name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
	        </if>
	    </if>
	
	    <!-- 년도 및 월 필터링 -->
	    <if test="START_YEAR != null and START_MONTH != null and END_YEAR != null and END_MONTH != null">
	        AND (b.pay_year BETWEEN #{START_YEAR} AND #{END_YEAR})
	        AND (b.pay_month BETWEEN #{START_MONTH} AND #{END_MONTH})
	    </if>
	
	    ORDER BY b.pay_year ASC, b.pay_month ASC
	</select>



<update id="updatePayEtc" parameterType="payDTO">
    UPDATE pay
    SET 
        etc = CASE WHEN #{etc} IS NOT NULL THEN #{etc} ELSE 0 END,  
        actual_pay = #{actualPay},
        upd_name = #{updName}  <!-- 로그인한 사용자 이름을 업데이트 -->
    WHERE emp_code = #{empCode}
    AND pay_year = #{payYear}
    AND pay_month = #{payMonth};
</update>






	<delete id="deletePay" parameterType="payDTO">
	    DELETE FROM pay
	    WHERE emp_code = #{empCode}
	    AND pay_year = #{payYear}
	    AND pay_month = #{payMonth};
	</delete>


</mapper>