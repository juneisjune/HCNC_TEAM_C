<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Popup_FindLoginInfo" width="560" height="350" titletext="아이디 및 비밀번호 찾기">
    <Layouts>
      <Layout height="350" mobileorientation="landscape" width="560">
        <Tab id="Tab00" taborder="1" tabindex="0" left="24" top="56" width="506" height="224" onchanged="Tab00_onchanged" cssclass="stc_stc">
          <Tabpages>
            <Tabpage id="Tabpage1" text="아이디 찾기" formscrollbartype="none">
              <Layouts>
                <Layout>
                  <Edit id="edt_NameForId" taborder="0" left="170" top="35" width="170" height="30"/>
                  <Static id="sta_NameForId" taborder="1" text="이름" left="99" top="35" width="50" height="30" cssclass="stc_stc" onclick="Tab00_Tabpage1_sta_NameForId_onclick"/>
                  <Static id="sta_EmailForId" taborder="2" text="이메일" left="89" top="90" width="70" height="30" cssclass="stc_stc"/>
                  <Edit id="edt_EmailForId" taborder="3" left="170" top="93" width="170" height="30" onchanged="Tab00_Tabpage1_edt_EmailForId_onchanged"/>
                  <Button id="btn_IdSearch" taborder="4" text="찾기" left="375" top="63" width="70" height="30" onclick="btn_IdSearch_onclick" cssclass="btn_search"/>
                  <Static id="sta_ResultId" taborder="5" left="-1" top="153" width="506" height="40" text="" cssclass="stc_stc" background=" #A1C4E8"/>
                </Layout>
              </Layouts>
            </Tabpage>
            <Tabpage id="Tabpage2" text="비밀번호 찾기">
              <Layouts>
                <Layout>
                  <Edit id="edt_IdForPassword" taborder="0" left="170" top="30" width="170" height="30"/>
                  <Static id="sta_IdForPassword" taborder="1" text="아이디" left="99" top="30" width="40" height="30" cssclass="stc_stc"/>
                  <Static id="sta_EmailForPassword" taborder="2" text="이메일" left="99" top="80" width="40" height="30" cssclass="stc_stc"/>
                  <Edit id="edt_EmailForPassword" taborder="3" left="170" top="80" width="170" height="30"/>
                  <Button id="btn_PasswordSearch" taborder="4" text="찾기" left="375" top="55" width="70" height="30" onclick="btn_PasswordSearch_onclick" cssclass="btn_search"/>
                  <Static id="sta_NewPassword" taborder="5" text="새로운 비밀번호 입력 " left="25" top="130" width="190" height="30" visible="false" cssclass="stc_stc"/>
                  <Edit id="edt_NewPassword" taborder="6" left="205" top="130" width="170" height="30" visible="false"/>
                  <Button id="btn_NewPassword" taborder="7" text="확인" left="410" top="130" width="50" height="30" visible="false" onclick="btn_NewPassword_onclick" cssclass="btn_normal"/>
                  <Static id="sta_authCheck" taborder="8" text="인증번호" left="79" top="130" width="60" height="30" cssclass="stc_stc" visible="false"/>
                  <Edit id="edt_authCheck" taborder="9" left="170" top="130" width="170" height="30" visible="false"/>
                  <Button id="btn_AuthCheck" taborder="10" text="인증" left="375" top="130" width="70" height="30" cssclass="btn_edit" onclick="Tab00_Tabpage2_btn_AuthCheck_onclick" visible="false"/>
                </Layout>
              </Layouts>
            </Tabpage>
          </Tabpages>
        </Tab>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
// Id 찾기 버튼
this.btn_IdSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.Tab00.Tabpage1.form.edt_NameForId.setFocus();
	
	// 유효성 검사
	if(this.ds_FindLoginInfo.getColumn(0, "name") == '') {
		alert("이름을 입력하세요.");
			this.Tab00.Tabpage1.form.edt_NameForId.setFocus();
		return;
	}
	if(this.ds_FindLoginInfo.getColumn(0, "emailForId") == '') {
		alert("이메일을 입력하세요.");
			this.Tab00.Tabpage1.form.edt_EmailForId.setFocus();
		return;
	}
	
	
	var strSvcId    = "FindId";
    var strSvcUrl   = "svc::FindId.do";
    var inData      = "ds_FindLoginInfo=ds_FindLoginInfo";  // 입력 데이터셋
    var outData     = "ds_Result=ds_Result"; // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
};

// Password 찾기 버튼
this.btn_PasswordSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.Tab00.Tabpage2.form.edt_IdForPassword.setFocus();
	// 유효성 검사
	if(this.ds_FindLoginInfo.getColumn(0, "id") == '') {
		alert("아이디를 입력하세요.");
			this.Tab00.Tabpage2.form.edt_IdForPassword.setFocus();
		return;
	}
	if(this.ds_FindLoginInfo.getColumn(0, "emailForPassword") == '') {
		alert("이메일을 입력하세요.");
			this.Tab00.Tabpage2.form.edt_EmailForPassword.setFocus();
		return;
	}
	
	var strSvcId    = "FindPassword";
    var strSvcUrl   = "svc::FindPassword.do";
    var inData      = "ds_FindLoginInfo=ds_FindLoginInfo";  // 입력 데이터셋
    var outData     = "";  // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

// 닫기 버튼
this.btn_Close_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.close("Close FindLoginInfo");
};

// 콜백 함수
this.fnCallback = function(svcID, errorCode, errorMsg) {

	// 아이디 찾기 콜백
	if(svcID == "FindId"){
		if (errorCode < 0) {
			alert(errorMsg);
			return;
		}
		
		var id = this.ds_Result.getColumn(0, "id");
		
		// Id 마스킹
		var maskedId = this.maskedId(id);
		
		var name = this.ds_FindLoginInfo.getColumn(0, "name");
		var ResultId = name + "님의 아이디는 " + maskedId + "입니다.";
		
		this.ds_Result.setColumn(0, "maskedId", maskedId);
		this.ds_Result.setColumn(0, "ResultId", ResultId);
		
	}
	
	// 비밀번호 찾기 콜백
	if(svcID == "FindPassword"){
		if (errorCode < 0) {
			alert(errorMsg);
			return;
		}
		
		this.fn_Auth();
		
	}
	
	//인증번호 발송 콜백
	if(svcID == "NexaAuth") {
		if (errorCode < 0) {
			alert(errorMsg);
			return;
		}
		
		alert("인증번호가 발송되었습니다.");
		
		// 인증번호 입력 칸과 버튼 보이기
		this.Tab00.Tabpage2.form.sta_authCheck.set_visible(true);
		this.Tab00.Tabpage2.form.edt_authCheck.set_visible(true);
		this.Tab00.Tabpage2.form.btn_AuthCheck.set_visible(true);
		
		// 서버에서 넘어온 인증 키(authKey)를 확인
        var authKey = this.ds_Auth.getColumn(0, "authKey");
		
	}
	
	// 비밀번호 업데이트 콜백
	if(svcID == "UpdatePassword"){
		if (errorCode < 0) {
			alert(errorMsg);
			return;
		}
		
		alert("비밀번호 등록이 완료되었습니다.");
		
		this.close("FindLoginInfo Close");
	}
	
}

// id 마스킹
this.maskedId = function(id) {
    
        var markedId = "";
        
        // 아이디 길이가 1 이상이면 마스킹 처리 시작
        if (id.length > 1) {
            // 두번째 글자까지 그대로
            markedId += id.substring(0, 2);
            
            // 중간 부분 마스킹
            for (var i = 2; i < id.length - 1; i++) {
                markedId += '*';
            }
            
            // 마지막 글자 추가
            markedId += id.substring(id.length - 1);
        } else {
            // 길이가 1인 경우는 그냥 그대로 사용
            markedId = id;
        }
        
        // 전체 마스킹된 Id 반환
        return markedId;
};

// 새 비밀번호 업데이트 확인 버튼
this.btn_NewPassword_onclick= function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.Tab00.Tabpage2.form.edt_NewPassword.setFocus();
	var password = this.ds_NewPassword.getColumn(0, "NewPassword");

	// 비밀번호 유효성 검사
    if (password && password.trim() !== "") {
        var passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/;
        if (!passwordPattern.test(password)) {
            alert("비밀번호는 최소 8자 이상이며, 숫자와 영문자를 포함해야 합니다.");
				this.Tab00.Tabpage2.form.edt_NewPassword.setFocus();
            return false;
       }
    }
	
	this.ds_NewPassword.setColumn(0, "id", this.ds_FindLoginInfo.getColumn(0, "id"));
	
	var strSvcId    = "UpdatePassword";
    var strSvcUrl   = "svc::UpdatePassword.do";
    var inData      = "ds_NewPassword=ds_NewPassword";  // 입력 데이터셋
    var outData     = "";  // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
};

// 인증번호 발송 함수
this.fn_Auth = function() {

    var email = this.ds_FindLoginInfo.getColumn(0, "emailForPassword");
    this.ds_email.setColumn(0, "email", email);  // 데이터셋에 이메일 설정

    var strSvcId    = "NexaAuth";
    var strSvcUrl   = "svc::NexaAuth.do";
    var inData      = "ds_email=ds_email";  // 입력 데이터셋
    var outData     = "ds_Auth=ds_Auth";  // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

// 인증번호 확인
this.Tab00_Tabpage2_btn_AuthCheck_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.Tab00.Tabpage2.form.edt_authCheck.setFocus();
	
	if(this.ds_Auth.getColumn(0, "authKey") == '' || this.ds_Auth.getColumn(0, "authKey") == null || this.ds_Auth.getColumn(0, "authKey") == 'undefined') {
		alert("인증번호를 먼저 발급받으세요.");
			this.Tab00.Tabpage2.form.edt_authCheck.setFocus();
		return;
	}

	if(this.ds_Auth.getColumn(0, "authKey") != this.ds_AuthCheck.getColumn(0, "authCheck")) {
		alert("인증번호가 일치하지 않습니다.");
			this.Tab00.Tabpage2.form.edt_authCheck.setFocus();
		return;
	}
	
	if(this.ds_Auth.getColumn(0, "authKey") == this.ds_AuthCheck.getColumn(0, "authCheck")) {
		alert("인증번호가 확인되었습니다.");
		
		// 인증번호 입력 칸과 버튼 숨기기
		this.Tab00.Tabpage2.form.sta_authCheck.set_visible(false);
		this.Tab00.Tabpage2.form.edt_authCheck.set_visible(false);
		this.Tab00.Tabpage2.form.btn_AuthCheck.set_visible(false);
		
		// 숨겨진 새 비밀번호 입력 칸 보이기
 		this.Tab00.Tabpage2.form.sta_NewPassword.set_visible(true);
		this.Tab00.Tabpage2.form.edt_NewPassword.set_visible(true);
		this.Tab00.Tabpage2.form.btn_NewPassword.set_visible(true);
	}
};
]]></Script>
    <Objects>
      <Dataset id="ds_FindLoginInfo">
        <ColumnInfo>
          <Column id="name" type="STRING" size="256"/>
          <Column id="id" type="STRING" size="256"/>
          <Column id="emailForId" type="STRING" size="256"/>
          <Column id="emailForPassword" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_Result" useclientlayout="true">
        <ColumnInfo>
          <Column id="ResultId" type="STRING" size="256"/>
          <Column id="ResultPassword" type="STRING" size="256"/>
          <Column id="id" type="STRING" size="256"/>
          <Column id="maskedId" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_NewPassword">
        <ColumnInfo>
          <Column id="NewPassword" type="STRING" size="256"/>
          <Column id="id" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_Auth">
        <ColumnInfo>
          <Column id="authKey" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_AuthCheck">
        <ColumnInfo>
          <Column id="authCheck" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_email">
        <ColumnInfo>
          <Column id="email" type="STRING" size="256"/>
          <Column id="maskedEmail" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item6" compid="Tab00.Tabpage1.form.edt_NameForId" propid="value" datasetid="ds_FindLoginInfo" columnid="name"/>
      <BindItem id="item0" compid="Tab00.Tabpage1.form.edt_EmailForId" propid="value" datasetid="ds_FindLoginInfo" columnid="emailForId"/>
      <BindItem id="item2" compid="Tab00.Tabpage1.form.sta_ResultId" propid="text" datasetid="ds_Result" columnid="ResultId"/>
      <BindItem id="item4" compid="Tab00.Tabpage2.form.edt_IdForPassword" propid="value" datasetid="ds_FindLoginInfo" columnid="id"/>
      <BindItem id="item7" compid="Tab00.Tabpage2.form.edt_EmailForPassword" propid="value" datasetid="ds_FindLoginInfo" columnid="emailForPassword"/>
      <BindItem id="item8" compid="Tab00.Tabpage2.form.edt_NewPassword" propid="value" datasetid="ds_NewPassword" columnid="NewPassword"/>
      <BindItem id="item1" compid="Tab00.Tabpage2.form.edt_authCheck" propid="value" datasetid="ds_AuthCheck" columnid="authCheck"/>
    </Bind>
  </Form>
</FDL>
