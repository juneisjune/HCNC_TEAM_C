<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="btn_Post" width="1280" height="720" titletext="New Form" onload="Form_Post_onload">
    <Layouts>
      <Layout height="720" width="1280">
        <Grid id="grd_notice" binddataset="ds_Post" left="30" top="150" width="1096" height="400" taborder="0" oncellclick="grd_notice_oncellclick" onheadclick="grd_notice_onheadclick" oncelldblclick="grd_notice_oncelldblclick" autofittype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="48"/>
                <Column size="71"/>
                <Column size="552"/>
                <Column size="128"/>
                <Column size="85"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="34"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="none" edittype="none" text="0" checkboxtruevalue="1" checkboxfalsevalue="0"/>
                <Cell col="1" text="번호"/>
                <Cell col="2" text="제목"/>
                <Cell col="3" text="작성일자"/>
                <Cell col="4" text="작성자"/>
                <Cell col="5" text="조회수"/>
                <Cell col="6" text="수정"/>
                <Cell col="7" text="삭제"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkboxcontrol" edittype="checkbox" text="bind:checked" checkboxtruevalue="1" checkboxfalsevalue="0"/>
                <Cell col="1" text="bind:post_code" textAlign="center"/>
                <Cell col="2" text="bind:title" textAlign="left"/>
                <Cell col="3" text="bind:reg_date" displaytype="date" mask="####-##-##"/>
                <Cell col="4" text="bind:upd_name" textAlign="center"/>
                <Cell col="5" text="bind:view_count" textAlign="center"/>
                <Cell col="6" displaytype="buttoncontrol" text="수정"/>
                <Cell col="7" displaytype="buttoncontrol" text="삭제" edittype="button"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="st_selectedCount" text="0건 선택됨" left="30" top="110" width="150" height="30" taborder="1" onclick="st_selectedCount_onclick" color="#6f0520"/>
        <Button id="btn_delete" text="삭제" left="1056" top="110" width="70" height="30" onclick="btn_delete_onclick" taborder="2" cssclass="btn_delete"/>
        <Button id="btn_newPost" taborder="3" text="등록" left="970" top="110" width="70" height="30" onclick="btn_newPost_onclick" cssclass="btn_regist"/>
        <Button id="Button00" taborder="4" text="조회" left="885" top="110" width="70" height="30" onclick="newEdit_onclick" cssclass="btn_search"/>
        <Static id="Static00_00" taborder="5" text="공지사항 관리" left="30" top="23" width="222" height="50" onclick="Static00_00_onclick" cssclass="stc_title"/>
        <Menu id="Menu00" taborder="6" left="252" top="198" width="76" height="152" onmenuclick="Menu00_onmenuclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.Form_Post_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.fnSearch();
	
	// ds_Post의 onvaluechanged 이벤트 핸들러 등록
    this.ds_Post.addEventHandler("onvaluechanged", this.ds_Post_onvaluechanged, this);
};


this.btn_addNotice_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.go("PostPage");
};

this.fnSearch = function (){
	
	var strSvcId    = "selectPost";                     // 콜백 서비스명
    var strSvcUrl   = "svc::selectPost.do";             // 호출 URL
    var inData      = "";                              // 입력 데이터셋
    var outData     = "ds_Post=ds_Post";               // 결과 데이터를 담을 데이터셋
    var strArg      = "";                              // 추가 파라미터
    var fnCallback  = "fnCallback";                    // 콜백 함수
    var isAsync     = true;                            // 비동기 여부
	
	this.transaction(strSvcId, strSvcUrl, inData,outData,strArg,fnCallback,isAsync);
	
}


this.fnCallback = function(strSvcId, nErrorCode, strErrorMsg) {
    if (nErrorCode < 0) {
        alert("조회 중 오류가 발생했습니다: " + strErrorMsg);
    }
}

 this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	this.fnSearch();
 };

this.btn_newPost_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	this.grd_notice.setFocus();
	nexacro.getApplication().mainframe.VFrameSet00.HFrameSet00.WorkFrame.set_formurl("FrameBase::Form_NewPost.xfdl");
};
//위에는 조회관련
this.grd_notice_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	 var clickedCol = e.col;  // 클릭한 컬럼 인덱스
    var postCode = obj.getCellText(e.row, 1);  // 클릭한 행의 게시글 번호

    // 삭제 버튼이 있는 셀 클릭 시
    if (clickedCol == 7) {  // 삭제 버튼이 있는 컬럼 (8번 컬럼)
        if (confirm("정말로 삭제하시겠습니까?")) {
			 var nRow = this.ds_deleteCode.addRow();
			this.ds_deleteCode.setColumn(nRow, "post_code", postCode);
            this.fnDeletePost(postCode);  // 삭제 처리 함수 호출
        }
    }
	    // 수정하기 버튼이 있는 셀 클릭 시
    if (clickedCol == 6) {
        if (confirm("정말 수정하시겠습니까?")) {
            var title = this.ds_Post.getColumn(this.ds_Post.rowposition, "title");
            var content = this.ds_Post.getColumn(this.ds_Post.rowposition, "content");

            var objParam = {
                post_code: postCode,  // 게시글 번호도 함께 전달
                title: title,
                content: content
            };

            // 팝업 호출
            this.showPopup(objParam);
        }
    }
};
this.fnDeletePost = function(postCode) {
    // 데이터셋 초기화
    this.ds_deleteCode.clearData();
    
    // 데이터셋에 게시글 번호 추가
    var nRow = this.ds_deleteCode.addRow();
    this.ds_deleteCode.setColumn(nRow, "post_code", postCode);

    // 트랜잭션 설정
    var strSvcId    = "deletePost";
    var strSvcUrl   = "svc::deletePost.do";
    var inData      = "ds_deleteCode=ds_deleteCode";  // 서버로 전송할 데이터셋
    var outData     = "";
    var strArg      = "";
    var fnCallback1  = "fnCallback1";
    var isAsync     = true;

    // 삭제 트랜잭션 실행
    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, fnCallback1, isAsync);
};

this.fnCallback1 = function(strSvcId, nErrorCode, strErrorMsg) {
    if (nErrorCode < 0) {
        alert("삭제 중 오류가 발생했습니다: " + strErrorMsg);
    } else {
        alert("게시글이 성공적으로 삭제되었습니다.");
        // 삭제 후 그리드를 다시 조회하여 갱신
        this.fnSearch();
    }
};



this.showPopup = function (objParam) 
{		  
	popup = new nexacro.ChildFrame;
	popup.init("popupWork", 0, 0, 800, 700, null, null, "FrameBase::Popup_editPost.xfdl");
	popup.set_dragmovetype("all");
	popup.set_layered("true");
	popup.set_autosize(true);
	popup.set_showtitlebar("Popup Title");
	popup.set_showstatusbar(false);
	popup.set_resizable(true);
	popup.set_openalign("center middle");
	popup.showModal(this.getOwnerFrame(), objParam, this, "fn_popupCallback", true);
	popup.style.set_overlaycolor("#6666664C");
	popup.form.style.set_border("1 solid #4c5a6f");
}

this.newEdit_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	this.grd_notice.setFocus();

		var objParam1 = 
			{post_code:this.ds_Post.getColumn(this.ds_Post.rowposition, "post_code")};
				  
	this.showPopup_Detail(objParam1);
};
this.showPopup_Detail = function (objParam1) 
{		  
	popup = new nexacro.ChildFrame;
	popup.init("popupWork", 0, 0, 800, 700, null, null, "FrameBase::Popup_DetailPost.xfdl");
	popup.set_dragmovetype("all");
	popup.set_layered("true");
	popup.set_autosize(true);
	popup.set_showtitlebar("Popup Title");
	popup.set_showstatusbar(false);
	popup.set_resizable(true);
	popup.set_openalign("center middle");
	popup.showModal(this.getOwnerFrame(), objParam1, this, "fn_popupCallback", true);
	popup.style.set_overlaycolor("#6666664C");
	popup.form.style.set_border("1 solid #4c5a6f");
}

this.grd_notice_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
		var objParam1 = 
			{post_code:this.ds_Post.getColumn(this.ds_Post.rowposition, "post_code")};
				  
	this.showPopup_Detail(objParam1);
};
//다중 선택시
this.btn_delete_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	this.grd_notice.setFocus();
	var arrDeleteCodes = [];

    // 데이터셋을 순회하면서 체크된 행의 게시글 코드를 배열에 추가
    for (var i = 0; i < this.ds_Post.rowcount; i++) {
        var checked = this.ds_Post.getColumn(i, "checked");
        if (checked == "1") {
            var postCode = this.ds_Post.getColumn(i, "post_code"); // 컬럼 이름 확인
            arrDeleteCodes.push(postCode);
        }
    }

    if (arrDeleteCodes.length == 0) {
        alert("삭제할 게시글을 선택하세요.");
        return;
    }

    if (confirm("선택한 " + arrDeleteCodes.length + "개의 게시글을 삭제하시겠습니까?")) {
        // 삭제 처리 함수 호출
        this.fnDeletePosts(arrDeleteCodes);
    }
};
this.fnDeletePosts = function(arrDeleteCodes)
{
    // 데이터셋 초기화
    this.ds_Delete.clearData();

    // 선택된 게시글 코드들을 데이터셋에 추가
    for (var i = 0; i < arrDeleteCodes.length; i++) {
        var postCode = arrDeleteCodes[i];

        if (postCode == null || postCode == undefined || postCode == "") {
            trace("유효하지 않은 postCode: " + postCode);
            continue;
        }

        var nRow = this.ds_Delete.addRow();
        this.ds_Delete.setColumn(nRow, "post_code", postCode);
    }

    // ds_Delete 데이터셋 출력
    trace("ds_Delete 데이터셋 내용:");
    trace(this.ds_Delete.saveXML());

    // 트랜잭션 설정
    var strSvcId    = "deletePosts";
    var strSvcUrl   = "svc::deletePosts.do";
    var inData      = "ds_Delete=ds_Delete";
    var outData     = "";
    var strArg      = "";
    var fnCallback  = "fnCallbackDelete";
    var isAsync     = true;

    // 삭제 트랜잭션 실행
    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, fnCallback, isAsync);
};
this.fnCallbackDelete = function(strSvcId, nErrorCode, strErrorMsg)
{
    if (nErrorCode < 0) {
        alert("삭제 중 오류가 발생했습니다: " + strErrorMsg);
    } else {
        alert("선택한 게시글이 성공적으로 삭제되었습니다.");
        // 삭제 후 그리드를 다시 조회하여 갱신
        this.fnSearch();
    }
};
// 데이터셋의 onvaluechanged 이벤트 핸들러 추가



this.ds_Post_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	// 변경된 컬럼이 'checked' 컬럼인지 확인
    if (e.columnid == "checked") {
        // 선택된 게시글 수 계산
        var selectedCount = 0;
        for (var i = 0; i < this.ds_Post.rowcount; i++) {
            var checked = this.ds_Post.getColumn(i, "checked");
            if (checked == "1") {
                selectedCount++;
            }
        }

        // 선택된 게시글 수를 st_selectedCount에 표시
        this.st_selectedCount.set_text(selectedCount + "건 선택됨");
    }
};

this.grd_notice_onheadclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	// 체크박스가 있는 첫 번째 컬럼의 헤더를 클릭했을 때
    if (e.cell == 0) {
        // 헤더의 체크 상태를 가져옴
        var isChecked = obj.getCellProperty("head", e.cell, "text") == "1" ? true : false;

        // 선택된 게시글 수 계산
        var selectedCount = isChecked ? this.ds_Post.rowcount : 0;

        // 선택된 게시글 수를 st_selectedCount에 표시
        this.st_selectedCount.set_text(selectedCount + "건 선택됨");
    }
};

]]></Script>
    <Objects>
      <Dataset id="ds_Post" onvaluechanged="ds_Post_onvaluechanged">
        <!--공지사항 화면 축출 화면의 data set-->
        <ColumnInfo>
          <Column id="number" type="INT" size="256"/>
          <Column id="title" type="STRING" size="256"/>
          <Column id="author" type="STRING" size="256"/>
          <Column id="date" type="DATE" size="256"/>
          <Column id="view_count" type="INT" size="256"/>
          <Column id="checked" type="STRING" size="1" default="0"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Delete">
        <ColumnInfo>
          <Column id="post_code" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_deleteCode">
        <ColumnInfo>
          <Column id="post_code" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
