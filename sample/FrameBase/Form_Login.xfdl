<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Login" width="1280" height="720" titletext="New Form" color="#000000" background="#003366" scrollbartype="none" onsize="Form_Login_onsize">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1280">
        <Div id="div_AuthForm" taborder="11" left="770" top="200" width="380" height="370" background="#ffffff"/>
        <Edit id="edt_AuthCheck" taborder="1" left="893" top="330" width="200" height="60"/>
        <Button id="btn_AuthCheck" taborder="2" text="인증" left="990" top="410" width="100" height="50" onclick="btn_AuthCheck_onclick" cssclass="btn_normal"/>
        <Static id="sta_AuthCheck" taborder="3" text="인증번호" left="766" top="330" width="115" height="60" cssclass="stc_stc"/>
        <Static id="sta_MaskEmail" taborder="9" text="발송받은 이메일" left="763" top="250" width="120" height="60" cssclass="stc_stc"/>
        <Edit id="edt_MaskedEmail" taborder="8" left="893" top="250" width="200" height="60" readonly="true" background="#ffffff"/>
        <Div id="div_LoginForm" taborder="10" left="770" top="200" width="380" height="370" background="#ffffff">
          <Layouts>
            <Layout>
              <Static id="sta_FindLoginInfo" taborder="0" text="아이디 및 비밀번호 찾기" left="210" top="278" width="135" height="25" onmouseleave="div_LoginForm_sta_FindLoginInfo_onmouseleave" onmouseenter="div_LoginForm_sta_FindLoginInfo_onmouseenter" onclick="div_LoginForm_sta_FindLoginInfo_onclick" font="12px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;" color="#000000"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btn_Login" taborder="0" text="인증번호 발송" left="1005" top="410" width="100" height="50" onclick="btn_Login_onclick" cssclass="btn_normal"/>
        <Static id="sta_Id" taborder="4" text="아이디" left="805" top="250" width="90" height="60" cssclass="stc_stc" onclick="sta_Id_onclick"/>
        <Static id="sta_Password" taborder="5" text="비밀번호" left="805" top="330" width="90" height="60" cssclass="stc_stc"/>
        <Edit id="edt_Id" taborder="6" left="905" top="250" width="200" height="60"/>
        <Edit id="edt_Password" taborder="7" left="905" top="330" width="200" height="60" password="true"/>
        <Div id="div_LoginMain" taborder="13" left="390" top="200" width="380" height="370" background="#B0C4D9"/>
        <ImageViewer id="img_HcncLogo" taborder="12" left="580" top="60" width="380" height="110" image="url('imagerc::img_hcnc_logo.png')" stretch="fixaspectratio" background="#003366" border="0px none"/>
        <Static id="sta_LoginMain2" taborder="14" text="Login" left="390" top="425" width="380" height="100" textAlign="center" font="42px/normal &quot;HY견고딕&quot;"/>
        <Static id="sta_LoginMain1" taborder="15" text="인사관리시스템" left="390" top="380" width="380" height="80" font="36px/normal &quot;HY견고딕&quot;" textAlign="center"/>
        <ImageViewer id="img_LoginMain" taborder="16" left="510" top="240" width="140" height="140" stretch="fixaspectratio" image="url('imagerc::인사관리시스템.png')" background="#B0C4D9" border="0px none"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
// 인증번호 발송(로그인) 버튼
this.btn_Login_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.edt_AuthCheck.setFocus();
    var userId = this.ds_login.getColumn(0, "user_id");
    var password = this.ds_login.getColumn(0, "password");

    // 아이디 유효성 검사
    if(userId == null || userId == '' || userId === 'undefined') {
        alert("아이디를 입력하세요.");
			this.edt_Id.setFocus();
        return;
    }

    // 비밀번호 유효성 검사
    if(password == null || password == '' || password === 'undefined')	 {
        alert("비밀번호를 입력하세요.");
			this.edt_Password.setFocus();
        return;
    }

	if(userId == 'master' && password == 'master') {
	// master 로그인
	this.fnMasterLogin();
	} else {
    // 로그인 함수 호출
    this.fnLogin();
	}
};


// 인증번호 발송 함수
this.fn_Auth = function() {

    var email = nexacro.getApplication().ds_userInfo.getColumn(0, "email");
    this.ds_email.setColumn(0, "email", email);  // 데이터셋에 이메일 설정

    var strSvcId    = "NexaAuth";
    var strSvcUrl   = "svc::NexaAuth.do";
    var inData      = "ds_email=ds_email";  // 입력 데이터셋
    var outData     = "ds_Auth=ds_Auth";  // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

// 서버 응답 처리 콜백 함수
this.fnCallback = function(strSvcId, nErrorCode, strErrorMsg) {
    // 통신 성공 시 처리
    if (nErrorCode == 0) {
		
		alert("인증 번호가 발송되었습니다.");
		
		this.ds_email.setColumn(0, "maskedEmail", this.maskEmail(this.ds_email.getColumn(0, "email")));

        var authKey = this.ds_Auth.getColumn(0, "authKey");
		
		this.div_LoginMain.set_visible(false);
		this.sta_LoginMain1.set_visible(false);
		this.sta_LoginMain2.set_visible(false);
		this.img_LoginMain.set_visible(false);
		
		this.div_LoginForm.set_left(390);
		this.sta_Id.set_left(420);
		this.sta_Password.set_left(420); 
		this.edt_Id.set_left(525);
		this.edt_Password.set_left(525);
		this.btn_Login.set_left(625);
		
    } else {
        // 통신 실패 시 에러 처리
        alert("Error occurred: " + strErrorMsg);
    }
};

// 로그인 성공 시 메인 화면으로 전환
this.fn_LoginSuccess = function() {
	
	//로그인 성공 시에 workFrame 첫 화면 
	nexacro.getApplication().mainframe.VFrameSet00.HFrameSet00.WorkFrame.set_formurl("FrameBase::Form_Post.xfdl");
	
	//Top, HFrameSet00, Login 3개 영역을 조정하여 로그인 화면이 보이지 않도록 설정
    nexacro.getApplication().mainframe.VFrameSet00.set_separatesize("65,*,0");
	
	//로그인 폼의 edt 모두 초기화
	this.ds_login.setColumn(0, "user_id", '');
	this.ds_login.setColumn(0, "password", '');
	this.ds_Auth.setColumn(0, "authKey", '');
	this.ds_AuthCheck.setColumn(0, "authCheck", '');
	this.ds_email.setColumn(0, "email", '');
	this.ds_email.setColumn(0, "maskedEmail", '');
}

//인증하기
this.btn_AuthCheck_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	this.img_LoginMain.setFocus();
	if(this.ds_Auth.getColumn(0, "authKey") == '' || this.ds_Auth.getColumn(0, "authKey") == null || this.ds_Auth.getColumn(0, "authKey") == 'undefined') {
		alert("인증번호를 먼저 발급받으세요.");
		this.edt_MaskedEmail.setFocus();
		return;
	}

	if(this.ds_Auth.getColumn(0, "authKey") != this.ds_AuthCheck.getColumn(0, "authCheck")) {
		alert("인증번호가 일치하지 않습니다.");
		this.edt_AuthCheck.setFocus();
		return;
	}
	
	if(this.ds_Auth.getColumn(0, "authKey") == this.ds_AuthCheck.getColumn(0, "authCheck")) {
		alert("인증번호가 확인되었습니다.");
		this.fn_LoginSuccess();
	}
};

// 로그인 함수
this.fnLogin = function() {
    
    var strSvcId = "Nexalogin";
    var strSvcUrl = "svc::Nexalogin.do";
    var inData = "ds_login=ds_login";
    var outData = "ds_userInfo=ds_userInfo";  // 서버로부터 받아온 데이터를 받을 데이터셋
    var strArg = "";
    var callBackFnc = "fnLoginCallback";  // 콜백 함수
    var isAsync = true;
    
    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
};

// 로그인 함수 콜백
this.fnLoginCallback = function(strSvcId, nErrorCode, strErrorMsg) {
   objApp=nexacro.getApplication();
   
    if (nErrorCode < 0) {
        alert("로그인 정보가 올바르지 않거나 권한이 없습니다.");
    }
    else {
	
	  // 인증번호 발송
	  this.fn_Auth();
	  
    }
};

this.maskEmail = function(email) {
    // '@'의 위치 찾기
    var index = email.indexOf("@");
    
    if (index > 0) {
        // '@' 앞의 부분 추출
        var id = email.substring(0, index);
        
        var markedId = "";
        
        // 아이디 길이가 1 이상이면 마스킹 처리 시작
        if (id.length > 1) {
            // 첫 글자는 그대로
            markedId += id.substring(0, 1);
            
            // 중간 부분 마스킹
            for (var i = 1; i < id.length - 1; i++) {
                markedId += '*';
            }
            
            // 마지막 글자 추가
            markedId += id.substring(id.length - 1);
        } else {
            // 길이가 1인 경우는 그냥 그대로 사용
            markedId = id;
        }
        
        // 전체 마스킹된 이메일 반환
        return markedId + email.substring(index);
    }
    
    // '@'가 없는 경우 원래 이메일 반환
    return email;
};

// 아이디 및 비밀번호 static영역에 들어왔을 때
this.div_LoginForm_sta_FindLoginInfo_onmouseenter = function(obj:nexacro.Static,e:nexacro.MouseEventInfo)
{
	this.div_LoginForm.form.sta_FindLoginInfo.set_color("#0000FF");
	this.div_LoginForm.form.sta_FindLoginInfo.set_font("italic 12px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;");
};
// 아이디 및 비밀번호 static영역에서 나갔을 때
this.div_LoginForm_sta_FindLoginInfo_onmouseleave = function(obj:nexacro.Static,e:nexacro.MouseEventInfo)
{
	this.div_LoginForm.form.sta_FindLoginInfo.set_color("#000000");
	this.div_LoginForm.form.sta_FindLoginInfo.set_font("12px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;");
};

// 아이디 및 비밀번호를 클릭했을 때
this.div_LoginForm_sta_FindLoginInfo_onclick = function(obj:nexacro.Static,e:nexacro.ClickEventInfo)
{
	this.showFindLoginInfo();
};

// FindLoginInfo 팝업 호출 함수
this.showFindLoginInfo = function (objParam) 
{		  
	popup = new nexacro.ChildFrame;
	popup.init("popupFindLoginInfo", 0, 0, 600, 500, null, null, "FrameBase::Popup_FindLoginInfo.xfdl");
	popup.set_dragmovetype("all");
	popup.set_layered("true");
	popup.set_autosize(true);
	popup.set_showtitlebar("아이디 및 비밀번호 찾기");
	popup.set_showstatusbar(false);
	popup.set_resizable(true);
	popup.set_openalign("center middle");
	popup.showModal(this.getOwnerFrame(), objParam, this, "fn_popupCallback", true);
	popup.style.set_overlaycolor("#6666664C");
	popup.form.style.set_border("1 solid #4c5a6f");
}

// master로그인
this.fnMasterLogin = function() {
	
	// master 계정 정보
	nexacro.getApplication().ds_userInfo.setColumn(0, "name", "master");
	nexacro.getApplication().ds_userInfo.setColumn(0, "emp_code", 1);
	nexacro.getApplication().ds_userInfo.setColumn(0, "dep_code", 1);
	nexacro.getApplication().ds_userInfo.setColumn(0, "assign_code", 7);

	this.fn_LoginSuccess();
}

//Form_Top에서 로그아웃시
this.Form_Login_onsize = function(obj:nexacro.Form,e:nexacro.SizeEventInfo)
{
	this.reload();
};
]]></Script>
    <Objects>
      <Dataset id="ds_login">
        <ColumnInfo>
          <Column id="user_id" type="STRING" size="256"/>
          <Column id="password" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_email">
        <ColumnInfo>
          <Column id="email" type="STRING" size="256"/>
          <Column id="maskedEmail" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_Auth">
        <ColumnInfo>
          <Column id="authKey" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_AuthCheck">
        <ColumnInfo>
          <Column id="authCheck" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="edt_AuthCheck" propid="value" datasetid="ds_AuthCheck" columnid="authCheck"/>
      <BindItem id="item1" compid="edt_Id" propid="value" datasetid="ds_login" columnid="user_id"/>
      <BindItem id="item2" compid="edt_Password" propid="value" datasetid="ds_login" columnid="password"/>
      <BindItem id="item3" compid="edt_MaskedEmail" propid="value" datasetid="ds_email" columnid="maskedEmail"/>
    </Bind>
  </Form>
</FDL>
